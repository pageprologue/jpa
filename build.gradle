buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } // plugin 저장소
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly('org.springframework.boot:spring-boot-devtools')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation ('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')

	runtimeOnly ('com.h2database:h2')
	runtimeOnly ('org.postgresql:postgresql')
    implementation ('org.postgresql:postgresql:42.2.14')
	implementation ('org.springframework.boot:spring-boot-starter-data-jdbc')
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation ('org.springframework.boot:spring-boot-starter-validation')
	implementation ('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3')
	implementation ('org.springframework.boot:spring-boot-starter-hateoas')


	implementation ('com.querydsl:querydsl-jpa')
	implementation ('com.querydsl:querydsl-apt')
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')

	compileOnly('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')
	testCompile('org.projectlombok:lombok')
	testImplementation('org.projectlombok:lombok')

	testCompile("org.assertj:assertj-core:3.11.1")
}

def querydslDir = 'src/target/generated/querydsl'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}